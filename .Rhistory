mutate(tasa_respuesta = (total - propuesta_genero)/total) |>
mutate(orden = tasa_no_respuesta - tasa_respuesta) |>
arrange(-orden) |>
rowid_to_column("orden_id") |>
select(orden_id, sexo, partido_coalicion, starts_with("tasa")) |>
pivot_longer(-c(partido_coalicion, orden_id, sexo), names_to = "tipo", values_to = "tasa")
propuestas_vacias_partido |>
mutate(label= ifelse(
tipo == "tasa_respuesta",
str_c(round(tasa*100), " %"),
NA_character_
)) |>
ggplot(aes(
reorder_within(partido_coalicion,-orden_id, sexo),
tasa,
fill=tipo)
)+
geom_col() +
geom_text(aes(label = label, y=.1),
color="white", family="roboto",
size=8, fontface = "bold") +
scale_y_continuous(labels = scales::percent)+
scale_fill_manual(values=c( "#c31f38", "grey80"),
name="¿Presentó propuestas?",
breaks=c("tasa_respuesta", "tasa_no_respuesta"),
labels=c("Sí", "No")) +
tema +
theme(panel.grid.major.y = element_blank())+
labs(title="Porcentaje presentación de propuestas por patidos políticos o coaliciones y sexo",
subtitle= "en las elecciones locales de 2022",
x="", y="\nPorcentaje de respuesta\n",
caption = "Fuente: Conóceles - INE\nLa línea punteada muestra la media por sexo.")+
coord_flip()+
geom_hline(yintercept = 0.5, linetype=2, size=1.2)+
facet_wrap(~sexo, scales = "free") +
scale_x_reordered()
ggsave("5_propuestas_sexo.png", width = 14, height = 10, dpi = 100)
x <- prop |>
group_by(propuesta_1) |>
mutate(n = n()) |>
select(partido_coalicion:sexo, propuesta_1, n) |>
filter(n==2)
View(x)
prop |> group_by(sexo) |>  summarise(mean = mean(edad))
View(x)
x <- prop |>
group_by(propuesta_1) |>
mutate(n = n()) |>
select(partido_coalicion:sexo, propuesta_1, n) |>
filter(n==2)
x <- prop |>
group_by(propuesta_1) |>
mutate(n = n()) |>
select(partido_coalicion:sexo, propuesta_1, n)
View(x)
x <- prop |>
group_by(propuesta_1) |>
mutate(n = n()) |>
filter(!is.na(propuesta_1) & n >1) |>
select(partido_coalicion:sexo, propuesta_1, n)
View(x)
x <- prop |>
group_by(propuesta_1) |>
mutate(n = n()) |>
filter(!is.na(propuesta_1) & n >1) |>
select(partido_coalicion:sexo, propuesta_1, n)  |>
select(partido_coalicion, nombre)
View(x)
x <- prop |>
group_by(propuesta_2) |>
mutate(n = n()) |>
filter(!is.na(propuesta_2) & n >1) |>
select(partido_coalicion:sexo, propuesta_2, n)  |>
select(partido_coalicion, nombre)
View(x)
x <- prop |>
group_by(propuesta_2) |>
mutate(n = n()) |>
filter(!is.na(propuesta_2) & n >1) |>
select(partido_coalicion:sexo, propuesta_2, n)
View(x)
x <- prop |>
group_by(propuesta_genero) |>
mutate(n = n()) |>
filter(!is.na(propuesta_genero) & n >1) |>
select(partido_coalicion:sexo, propuesta_genero, n)
View(x)
prop |>
mutate(across(starts_with("propuesta"),
~str_remove_all(.x, "No proporcionó")))
prop |>
mutate(across(starts_with("propuesta"),
~str_remove_all(.x, "No proporcionó")))->x
View(x)
prop |>
mutate(across(starts_with("propuesta"),
~ifelse(.x == "No proporcionó", NA_character_, .x)))->x
View(x)
prop |>
mutate(across(starts_with("propuesta"),
~ifelse(.x == "No proporcionó",
NA_character_, .x)))
prop |>
mutate(across(starts_with("propuesta"),
~ifelse(.x == "No proporcionó",
NA_character_, .x)))
duplicados <- prop |>
mutate(across(starts_with("propuesta"),
~ifelse(.x == "No proporcionó",
NA_character_, .x))) |>
group_by(propuesta_1) |>
mutate(dup_p1 = n()) |> ungroup()|>
group_by(propuesta_2) |>
mutate(dup_p2 = n()) |> ungroup()|>
group_by(propuesta_genero) |>
mutate(dup_pgen = n()) |> ungroup()
View(duplicados)
duplicados <- prop |>
mutate(across(starts_with("propuesta"),
~ifelse(.x == "No proporcionó",
NA_character_, .x))) |>
group_by(propuesta_1) |>
mutate(dup_p1 = n()>1 |> as.integer()) |> ungroup()|>
group_by(propuesta_2) |>
mutate(dup_p2 = n()) |> ungroup()|>
group_by(propuesta_genero) |>
mutate(dup_pgen = n()) |> ungroup()
View(duplicados)
duplicados <- prop |>
mutate(across(starts_with("propuesta"),
~ifelse(.x == "No proporcionó",
NA_character_, .x))) |>
group_by(propuesta_1) |>
mutate(dup_p1 = n()>1) |> ungroup()|>
group_by(propuesta_2) |>
mutate(dup_p2 = n()>1) |> ungroup()|>
group_by(propuesta_genero) |>
mutate(dup_pgen = n()>1) |> ungroup() |>
mutate(across(starts_with("dup"), as.integer))
View(duplicados)
duplicados <- prop |>
mutate(across(starts_with("propuesta"),
~ifelse(.x %in% c("No proporcionó", "."),
NA_character_, .x))) |>
group_by(propuesta_1) |>
mutate(dup_p1 = n()>1) |> ungroup()|>
group_by(propuesta_2) |>
mutate(dup_p2 = n()>1) |> ungroup()|>
group_by(propuesta_genero) |>
mutate(dup_pgen = n()>1) |> ungroup() |>
mutate(across(starts_with("dup"), as.integer))
View(duplicados)
duplicados <- prop |>
mutate(across(starts_with("propuesta"),
~ifelse(.x %in% c("No proporcionó", "."),
NA_character_, .x))) |>
group_by(propuesta_1) |>
mutate(dup_p1 = n()>1) |> ungroup()|>
group_by(propuesta_2) |>
mutate(dup_p2 = n()>1) |> ungroup()|>
group_by(propuesta_genero) |>
mutate(dup_pgen = n()>1) |> ungroup() |>
mutate(across(starts_with("dup"), as.integer))|>
mutate(across(starts_with("dup"), ~ifelse(is.na(.x), 0, .x)))
View(duplicados)
duplicados <- prop |>
mutate(across(starts_with("propuesta"),
~ifelse(.x %in% c("No proporcionó", "."),
NA_character_, .x))) |>
group_by(propuesta_1) |>
mutate(dup_p1 = n()>1) |> ungroup()|>
group_by(propuesta_2) |>
mutate(dup_p2 = n()>1) |> ungroup()|>
group_by(propuesta_genero) |>
mutate(dup_pgen = n()>1) |> ungroup() |>
mutate(across(starts_with("dup"), as.integer))|>
mutate(across(starts_with("dup"),
~case_when(
is.na(.x) ~ 0,
TRUE ~ 0
)))
View(duplicados)
duplicados <- prop |>
mutate(across(starts_with("propuesta"),
~ifelse(.x %in% c("No proporcionó", "."),
NA_character_, .x))) |>
group_by(propuesta_1) |>
mutate(dup_p1 = n()>1) |> ungroup()|>
group_by(propuesta_2) |>
mutate(dup_p2 = n()>1) |> ungroup()|>
group_by(propuesta_genero) |>
mutate(dup_pgen = n()>1) |> ungroup() |>
mutate(across(starts_with("dup"), as.integer))
duplicados <- prop |>
mutate(across(starts_with("propuesta"),
~ifelse(.x %in% c("No proporcionó", "."),
NA_character_, .x))) |>
group_by(propuesta_1) |>
mutate(dup_p1 = n()>1) |> ungroup()|>
group_by(propuesta_2) |>
mutate(dup_p2 = n()>1) |> ungroup()|>
group_by(propuesta_genero) |>
mutate(dup_pgen = n()>1) |> ungroup() |>
mutate(across(starts_with("dup"), as.integer)) |>
mutate(dup_p1 = ifelse(is.na(dup_p1), 0, dup_p1))
View(duplicados)
duplicados <- prop |>
mutate(across(starts_with("propuesta"),
~ifelse(.x %in% c("No proporcionó", "."),
NA_character_, .x))) |>
group_by(propuesta_1) |>
mutate(dup_p1 = n()>1) |> ungroup()|>
group_by(propuesta_2) |>
mutate(dup_p2 = n()>1) |> ungroup()|>
group_by(propuesta_genero) |>
mutate(dup_pgen = n()>1) |> ungroup() |>
mutate(across(starts_with("dup"), as.integer)) |>
mutate(dup_p1 = case_when(is.na(dup_p1) ~ 0, TRUE ~ 1))
x <- duplicados |> filter(dup_p1 == 1)
View(x)
duplicados <- prop |>
mutate(across(starts_with("propuesta"),
~ifelse(.x %in% c("No proporcionó", "."),
NA_character_, .x))) |>
group_by(propuesta_1) |>
mutate(dup_p1 = n()>1) |> ungroup()|>
group_by(propuesta_2) |>
mutate(dup_p2 = n()>1) |> ungroup()|>
group_by(propuesta_genero) |>
mutate(dup_pgen = n()>1) |> ungroup() |>
mutate(across(starts_with("dup"), as.integer))
duplicados <- prop |>
mutate(across(starts_with("propuesta"),
~ifelse(.x %in% c("No proporcionó", "."),
NA_character_, .x))) |>
group_by(propuesta_1) |>
mutate(dup_p1 = n()>1) |> ungroup()|>
group_by(propuesta_2) |>
mutate(dup_p2 = n()>1) |> ungroup()|>
group_by(propuesta_genero) |>
mutate(dup_pgen = n()>1) |> ungroup() |>
mutate(across(starts_with("dup"), as.integer)) |>
mutate(dup_1 = ifelse(is.na(propuesta_1), 0, dup_1))|>
mutate(dup_2 = ifelse(is.na(propuesta_2), 0, dup_2))|>
mutate(dup_pgen = ifelse(is.na(propuesta_genero), 0, dup_pgen))
duplicados <- prop |>
mutate(across(starts_with("propuesta"),
~ifelse(.x %in% c("No proporcionó", "."),
NA_character_, .x))) |>
group_by(propuesta_1) |>
mutate(dup_p1 = n()>1) |> ungroup()|>
group_by(propuesta_2) |>
mutate(dup_p2 = n()>1) |> ungroup()|>
group_by(propuesta_genero) |>
mutate(dup_pgen = n()>1) |> ungroup() |>
mutate(across(starts_with("dup"), as.integer)) |>
mutate(dup_p1 = ifelse(is.na(propuesta_1), 0, dup_1))|>
mutate(dup_p2 = ifelse(is.na(propuesta_2), 0, dup_2))|>
mutate(dup_pgen = ifelse(is.na(propuesta_genero), 0, dup_pgen))
duplicados <- prop |>
mutate(across(starts_with("propuesta"),
~ifelse(.x %in% c("No proporcionó", "."),
NA_character_, .x))) |>
group_by(propuesta_1) |>
mutate(dup_p1 = n()>1) |> ungroup()|>
group_by(propuesta_2) |>
mutate(dup_p2 = n()>1) |> ungroup()|>
group_by(propuesta_genero) |>
mutate(dup_pgen = n()>1) |> ungroup() |>
mutate(across(starts_with("dup"), as.integer)) |>
mutate(dup_p1 = ifelse(is.na(propuesta_1), 0, dup_p1))|>
mutate(dup_p2 = ifelse(is.na(propuesta_2), 0, dup_p2))|>
mutate(dup_pgen = ifelse(is.na(propuesta_genero), 0, dup_pgen))
View(duplicados)
26/279
sum(duplicados$dup_p1)
sum(duplicados$dup_p2)
sum(duplicados$dup_p3)
sum(duplicados$dup_pgen)
22/279
10/279
17/279
prop |>
mutate(across(starts_with("propuesta"),
~ifelse(.x %in% c("No proporcionó", "."),
NA_character_, .x)))
prop |>
mutate(across(starts_with("propuesta"),
~ifelse(.x %in% c("No proporcionó", "."),
NA_character_, .x))) |>
mutate(prop_total = str_c(propuesta_1, propuesta_2, propuesta_genero))
prop |>
mutate(across(starts_with("propuesta"),
~ifelse(.x %in% c("No proporcionó", "."),
NA_character_, .x))) |>
mutate(prop_total = str_c(propuesta_1, propuesta_2, propuesta_genero))->x
View(x)
prop |>
mutate(across(starts_with("propuesta"),
~ifelse(.x %in% c("No proporcionó", "."),
NA_character_, .x))) |>
mutate(prop_total = paste0(propuesta_1, propuesta_2, propuesta_genero, sep=" "))->x
View(x)
?paste0
prop |>
mutate(across(starts_with("propuesta"),
~ifelse(.x %in% c("No proporcionó", "."),
NA_character_, .x))) |>
mutate(prop_total = paste(propuesta_1, propuesta_2, propuesta_genero, sep=" "))->x
prop |>
mutate(across(starts_with("propuesta"),
~ifelse(.x %in% c("No proporcionó", "."),
NA_character_, .x))) |>
mutate(prop_total = paste(propuesta_1, propuesta_2, propuesta_genero, sep=" ")) |>
filter(!str_detect(prop-total, "NA NA NA"))
prop |>
mutate(across(starts_with("propuesta"),
~ifelse(.x %in% c("No proporcionó", "."),
NA_character_, .x))) |>
mutate(prop_total = paste(propuesta_1, propuesta_2, propuesta_genero, sep=" ")) |>
filter(!str_detect(prop_total, "NA NA NA"))
prop |>
mutate(across(starts_with("propuesta"),
~ifelse(.x %in% c("No proporcionó", "."),
NA_character_, .x))) |>
mutate(prop_total = paste(propuesta_1, propuesta_2, propuesta_genero, sep=" ")) |>
filter(!str_detect(prop_total, "NA NA NA")) |>
mutate(prop_total = str_remove_all(prop_total, "NA "))
glimpse(x)
prop |>
mutate(across(starts_with("propuesta"),
~ifelse(.x %in% c("No proporcionó", "."),
NA_character_, .x))) |>
mutate(prop_total = paste(propuesta_1, propuesta_2, propuesta_genero, sep=" ")) |>
filter(!str_detect(prop_total, "NA NA NA")) |>
mutate(prop_total = str_remove_all(prop_total, "NA ")) |>
select(partido_coalicion:entidad,edad,sexo,escolaridad,
historia_profesional:motivo_cargo_publico,
prop_total)
cal_prop <- prop |>
mutate(across(starts_with("propuesta"),
~ifelse(.x %in% c("No proporcionó", "."),
NA_character_, .x))) |>
mutate(prop_total = paste(propuesta_1, propuesta_2, propuesta_genero, sep=" ")) |>
filter(!str_detect(prop_total, "NA NA NA")) |>
mutate(prop_total = str_remove_all(prop_total, "NA ")) |>
select(partido_coalicion:entidad,edad,sexo,escolaridad,
historia_profesional:motivo_cargo_publico,
prop_total)
propo
glimpse(prop)
prop |>
select(partido_coalicion, sexo, cargo, escolaridad, cursos)
x <- prop |>
select(partido_coalicion, sexo, cargo, escolaridad, cursos)
View(x)
x <- prop |>
select(nombre_candidato, entidad, partido_coalicion, sexo, cargo, escolaridad, cursos)
x <- prop |>
select(nombre_candidato, entidad, partido_coalicion, sexo, cargo, escolaridad, cursos, starts_with("popues"))
x <- prop |>
select(nombre_candidato, entidad, partido_coalicion, sexo, cargo, escolaridad, cursos, starts_with("propues"))
pacman::p_load(tidyverse, readxl, tidytext, extrafont, showtext)
font_add_google("Oswald", "osw")
font_add_google("Roboto", "roboto")
font_add_google("Bebas Neue", "bebas")
showtext_auto()
tema <-  theme_minimal() +
theme(text = element_text(family="roboto", color = "grey35"),
plot.title = element_text(size = 24, face = "bold",
#margin = margin(10,0,20,0),
family="bebas", color = "grey25"),
plot.subtitle = element_text(size = 20, face = "bold", colour = "#666666",
#margin = margin(0, 0, 20, 0),
family="bebas"),
strip.text = element_text(size=14, family="roboto", face="bold"),
plot.caption = element_text(hjust = 1, size = 12,
family = "roboto"),
panel.grid = element_line(linetype = 1),
panel.grid.minor = element_blank(),
legend.position = "bottom",
legend.title = element_text(size = 12, face = "bold", family="osw"),
legend.text = element_text(size = 10, family="roboto"),
legend.title.align = 0.5,
axis.title = element_text(size = 14, hjust = 0.5,
face = "bold", margin = margin(0,0,0,0), family="roboto"),
axis.text = element_text(size = 12, face = "bold", family="roboto"),
plot.title.position = 'plot')
data <- read_excel("input/data/baseDatosCandidatos.xls") |>
mutate(PARTIDO_COALICION = str_remove_all(PARTIDO_COALICION, "\\.")) |>
mutate(PARTIDO_COALICION =
str_replace_all(PARTIDO_COALICION,
"FUERZA POR MÉXICO", "FXM")) |>
mutate(PARTIDO_COALICION =
str_replace_all(PARTIDO_COALICION,
"JUNTOS HACEMOS HISTORIA EN", "JHH"))|>
mutate(PARTIDO_COALICION =
str_replace_all(PARTIDO_COALICION,
"PARTIDO DEL TRABAJO", "PT")) |>
mutate(PARTIDO_COALICION =
str_replace_all(PARTIDO_COALICION,
"PARTIDO DE LA REVOLUCIÓN DEMOCRÁTICA",
"PRD")) |>
mutate(PARTIDO_COALICION =
str_replace_all(PARTIDO_COALICION,
"PARTIDO ACCIÓN NACIONAL",
"PAN")) |>
mutate(PARTIDO_COALICION =
str_replace_all(PARTIDO_COALICION,
"MOVIMIENTO CIUDADANO",
"MC")) |>
mutate(PARTIDO_COALICION =
str_replace_all(PARTIDO_COALICION,
"PARTIDO REVOLUCIONARIO INSTITUCIONAL",
"PRI")) |>
mutate(PARTIDO_COALICION =
str_replace_all(PARTIDO_COALICION,
"PARTIDO VERDE ECOLOGISTA DE MÉXICO|PARTIDO VERDE",
"PVEM")) |>
janitor::clean_names()
prop <- data |>
filter(str_detect(tipo_candidato, "PROPI")) |>
distinct(num_lista_o_formula, .keep_all = T) |> # La base traía errores en la variable tipo_candidato
mutate(cargo = factor(cargo, levels=c('GUBERNATURA',
'PRESIDENCIA MUNICIPAL',
'DIPUTACIÓN LOCAL RP',
'DIPUTACIÓN LOCAL MR')))
prop.v <- data |>
filter(str_detect(tipo_candidato, "PROPI")) |>
group_by(num_lista_o_formula) |>
mutate(n = n()) |>
filter(n>1) # Confirmado, hay errores de registro
prop |>
select(partido_coalicion, sexo, cargo, escolaridad, cursos) |>
mutate(escolaridad = ifelse(is.na(escolaridad), "No contestó", escolaridad)) |>
mutate(escolaridad = factor(escolaridad, levels=c('No contestó','Primaria', 'Secundaria',
'Técnica','Preparatoria', 'Licenciatura',
'Especialidad','Maestría', 'Doctorado'
))) |>
#filter(!is.na(escolaridad)) |>
group_by(sexo, escolaridad) |>
summarise(n = n()) |> ungroup() |>
group_by(sexo) |>
mutate(prop = n/sum(n))
prop |>
select(partido_coalicion, sexo, cargo, escolaridad, cursos) |>
mutate(escolaridad = ifelse(is.na(escolaridad), "No contestó", escolaridad)) |>
mutate(escolaridad = factor(escolaridad, levels=c('No contestó','Primaria', 'Secundaria',
'Técnica','Preparatoria', 'Licenciatura',
'Especialidad','Maestría', 'Doctorado'
))) |>
#filter(!is.na(escolaridad)) |>
group_by(sexo, escolaridad) |>
summarise(n = n()) |> ungroup() |>
group_by(sexo) |>
mutate(prop = n/sum(n)) |>
group_by(aes(escolaridad, prop))+
geom_col()
prop |>
select(partido_coalicion, sexo, cargo, escolaridad, cursos) |>
mutate(escolaridad = ifelse(is.na(escolaridad), "No contestó", escolaridad)) |>
mutate(escolaridad = factor(escolaridad, levels=c('No contestó','Primaria', 'Secundaria',
'Técnica','Preparatoria', 'Licenciatura',
'Especialidad','Maestría', 'Doctorado'
))) |>
#filter(!is.na(escolaridad)) |>
group_by(sexo, escolaridad) |>
summarise(n = n()) |> ungroup() |>
group_by(sexo) |>
mutate(prop = n/sum(n))
prop |>
select(partido_coalicion, sexo, cargo, escolaridad, cursos) |>
mutate(escolaridad = ifelse(is.na(escolaridad), "No contestó", escolaridad)) |>
mutate(escolaridad = factor(escolaridad, levels=c('No contestó','Primaria', 'Secundaria',
'Técnica','Preparatoria', 'Licenciatura',
'Especialidad','Maestría', 'Doctorado'
))) |>
#filter(!is.na(escolaridad)) |>
group_by(sexo, escolaridad) |>
summarise(n = n()) |> ungroup() |>
group_by(sexo) |>
mutate(prop = n/sum(n)) |>
group_by(aes(escolaridad, prop))+
geom_col()
prop |>
select(partido_coalicion, sexo, cargo, escolaridad, cursos) |>
mutate(escolaridad = ifelse(is.na(escolaridad), "No contestó", escolaridad)) |>
mutate(escolaridad = factor(escolaridad, levels=c('No contestó','Primaria', 'Secundaria',
'Técnica','Preparatoria', 'Licenciatura',
'Especialidad','Maestría', 'Doctorado'
))) |>
#filter(!is.na(escolaridad)) |>
group_by(sexo, escolaridad) |>
summarise(n = n()) |> ungroup() |>
group_by(sexo) |>
mutate(prop = n/sum(n)) |>
ggplot(aes(escolaridad, prop))+
geom_col()
prop |>
select(partido_coalicion, sexo, cargo, escolaridad, cursos) |>
mutate(escolaridad = ifelse(is.na(escolaridad), "No contestó", escolaridad)) |>
mutate(escolaridad = factor(escolaridad, levels=c('No contestó','Primaria', 'Secundaria',
'Técnica','Preparatoria', 'Licenciatura',
'Especialidad','Maestría', 'Doctorado'
))) |>
#filter(!is.na(escolaridad)) |>
group_by(sexo, escolaridad) |>
summarise(n = n()) |> ungroup() |>
group_by(sexo) |>
mutate(prop = n/sum(n)) |>
ggplot(aes(escolaridad, prop, fill= sexo))+
geom_col()
